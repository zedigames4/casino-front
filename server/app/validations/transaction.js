"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _joi = _interopRequireDefault(require("joi"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
class TransactionValidate {
  static async create(req, res, next) {
    const schema = _joi.default.object().keys({
      method: _joi.default.object().required(),
      action: _joi.default.string(),
      currency: _joi.default.string(),
      amount: _joi.default.number().required()
    });
    const {
      error
    } = schema.validate(req.body);
    if (error) {
      return res.status(400).json({
        message: error.details[0].message.replace(/"/g, '')
      });
    }
    return next();
  }
  static async getAll(req, res, next) {
    const schema = _joi.default.object().keys({
      user: _joi.default.string(),
      receiver: _joi.default.string(),
      status: _joi.default.string().valid('SUCCESSFUL', 'PENDING', 'FAILED'),
      mode: _joi.default.string(),
      action: _joi.default.string().allow('deposit', 'transfer', 'withdraw')
    });
    const {
      error
    } = schema.validate(req.query);
    if (error) {
      return res.status(400).json({
        message: error.details[0].message.replace(/"/g, '')
      });
    }
    return next();
  }
}
exports.default = TransactionValidate;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUcmFuc2FjdGlvblZhbGlkYXRlIiwiY3JlYXRlIiwicmVxIiwicmVzIiwibmV4dCIsInNjaGVtYSIsImpvaSIsIm9iamVjdCIsImtleXMiLCJtZXRob2QiLCJyZXF1aXJlZCIsImFjdGlvbiIsInN0cmluZyIsImN1cnJlbmN5IiwiYW1vdW50IiwibnVtYmVyIiwiZXJyb3IiLCJ2YWxpZGF0ZSIsImJvZHkiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImRldGFpbHMiLCJyZXBsYWNlIiwiZ2V0QWxsIiwidXNlciIsInJlY2VpdmVyIiwidmFsaWQiLCJtb2RlIiwiYWxsb3ciLCJxdWVyeSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcHAvdmFsaWRhdGlvbnMvdHJhbnNhY3Rpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbiB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgam9pIGZyb20gJ2pvaSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFuc2FjdGlvblZhbGlkYXRlIHtcclxuICBzdGF0aWMgYXN5bmMgY3JlYXRlKFxyXG4gICAgcmVxOiBSZXF1ZXN0LFxyXG4gICAgcmVzOiBSZXNwb25zZSxcclxuICAgIG5leHQ6IE5leHRGdW5jdGlvbixcclxuICApIHtcclxuICAgIGNvbnN0IHNjaGVtYSA9IGpvaS5vYmplY3QoKS5rZXlzKHtcclxuICAgICAgbWV0aG9kOiBqb2kub2JqZWN0KCkucmVxdWlyZWQoKSxcclxuICAgICAgYWN0aW9uOiBqb2kuc3RyaW5nKCksXHJcbiAgICAgIGN1cnJlbmN5OiBqb2kuc3RyaW5nKCksXHJcbiAgICAgIGFtb3VudDogam9pLm51bWJlcigpLnJlcXVpcmVkKCksXHJcbiAgICB9KTtcclxuICAgIGNvbnN0IHsgZXJyb3IgfSA9IHNjaGVtYS52YWxpZGF0ZShyZXEuYm9keSk7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICBtZXNzYWdlOiBlcnJvci5kZXRhaWxzWzBdLm1lc3NhZ2UucmVwbGFjZSgvXCIvZywgJycpLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXh0KCk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgZ2V0QWxsKFxyXG4gICAgcmVxOiBSZXF1ZXN0LFxyXG4gICAgcmVzOiBSZXNwb25zZSxcclxuICAgIG5leHQ6IE5leHRGdW5jdGlvbixcclxuICApIHtcclxuICAgIGNvbnN0IHNjaGVtYSA9IGpvaS5vYmplY3QoKS5rZXlzKHtcclxuICAgICAgdXNlcjogam9pLnN0cmluZygpLFxyXG4gICAgICByZWNlaXZlcjogam9pLnN0cmluZygpLFxyXG4gICAgICBzdGF0dXM6IGpvaS5zdHJpbmcoKS52YWxpZCgnU1VDQ0VTU0ZVTCcsICdQRU5ESU5HJywgJ0ZBSUxFRCcpLFxyXG4gICAgICBtb2RlOiBqb2kuc3RyaW5nKCksXHJcbiAgICAgIGFjdGlvbjogam9pLnN0cmluZygpLmFsbG93KCdkZXBvc2l0JywgJ3RyYW5zZmVyJywgJ3dpdGhkcmF3JyksXHJcbiAgICB9KTtcclxuICAgIGNvbnN0IHsgZXJyb3IgfSA9IHNjaGVtYS52YWxpZGF0ZShyZXEucXVlcnkpO1xyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XHJcbiAgICAgICAgbWVzc2FnZTogZXJyb3IuZGV0YWlsc1swXS5tZXNzYWdlLnJlcGxhY2UoL1wiL2csICcnKSxcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV4dCgpO1xyXG4gIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBO0FBQXNCO0FBRVAsTUFBTUEsbUJBQW1CLENBQUM7RUFDdkMsYUFBYUMsTUFBTSxDQUNqQkMsR0FBWSxFQUNaQyxHQUFhLEVBQ2JDLElBQWtCLEVBQ2xCO0lBQ0EsTUFBTUMsTUFBTSxHQUFHQyxZQUFHLENBQUNDLE1BQU0sRUFBRSxDQUFDQyxJQUFJLENBQUM7TUFDL0JDLE1BQU0sRUFBRUgsWUFBRyxDQUFDQyxNQUFNLEVBQUUsQ0FBQ0csUUFBUSxFQUFFO01BQy9CQyxNQUFNLEVBQUVMLFlBQUcsQ0FBQ00sTUFBTSxFQUFFO01BQ3BCQyxRQUFRLEVBQUVQLFlBQUcsQ0FBQ00sTUFBTSxFQUFFO01BQ3RCRSxNQUFNLEVBQUVSLFlBQUcsQ0FBQ1MsTUFBTSxFQUFFLENBQUNMLFFBQVE7SUFDL0IsQ0FBQyxDQUFDO0lBQ0YsTUFBTTtNQUFFTTtJQUFNLENBQUMsR0FBR1gsTUFBTSxDQUFDWSxRQUFRLENBQUNmLEdBQUcsQ0FBQ2dCLElBQUksQ0FBQztJQUMzQyxJQUFJRixLQUFLLEVBQUU7TUFDVCxPQUFPYixHQUFHLENBQUNnQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztRQUMxQkMsT0FBTyxFQUFFTCxLQUFLLENBQUNNLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsT0FBTyxDQUFDRSxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUU7TUFDcEQsQ0FBQyxDQUFDO0lBQ0o7SUFDQSxPQUFPbkIsSUFBSSxFQUFFO0VBQ2Y7RUFFQSxhQUFhb0IsTUFBTSxDQUNqQnRCLEdBQVksRUFDWkMsR0FBYSxFQUNiQyxJQUFrQixFQUNsQjtJQUNBLE1BQU1DLE1BQU0sR0FBR0MsWUFBRyxDQUFDQyxNQUFNLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDO01BQy9CaUIsSUFBSSxFQUFFbkIsWUFBRyxDQUFDTSxNQUFNLEVBQUU7TUFDbEJjLFFBQVEsRUFBRXBCLFlBQUcsQ0FBQ00sTUFBTSxFQUFFO01BQ3RCTyxNQUFNLEVBQUViLFlBQUcsQ0FBQ00sTUFBTSxFQUFFLENBQUNlLEtBQUssQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLFFBQVEsQ0FBQztNQUM3REMsSUFBSSxFQUFFdEIsWUFBRyxDQUFDTSxNQUFNLEVBQUU7TUFDbEJELE1BQU0sRUFBRUwsWUFBRyxDQUFDTSxNQUFNLEVBQUUsQ0FBQ2lCLEtBQUssQ0FBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLFVBQVU7SUFDOUQsQ0FBQyxDQUFDO0lBQ0YsTUFBTTtNQUFFYjtJQUFNLENBQUMsR0FBR1gsTUFBTSxDQUFDWSxRQUFRLENBQUNmLEdBQUcsQ0FBQzRCLEtBQUssQ0FBQztJQUM1QyxJQUFJZCxLQUFLLEVBQUU7TUFDVCxPQUFPYixHQUFHLENBQUNnQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztRQUMxQkMsT0FBTyxFQUFFTCxLQUFLLENBQUNNLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsT0FBTyxDQUFDRSxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUU7TUFDcEQsQ0FBQyxDQUFDO0lBQ0o7SUFDQSxPQUFPbkIsSUFBSSxFQUFFO0VBQ2Y7QUFDRjtBQUFDIn0=