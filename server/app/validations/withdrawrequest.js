"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _joi = _interopRequireDefault(require("joi"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
class WithdrawrequestValidate {
  static async findAll(req, res, next) {
    const schema = _joi.default.object().keys({
      page: _joi.default.number(),
      limit: _joi.default.number(),
      status: _joi.default.string().valid('APPROVED', 'PENDING', 'REJECTED'),
      userId: _joi.default.string()
    });
    const {
      error
    } = schema.validate(req.query);
    if (error) {
      return res.status(400).json({
        message: error.details[0].message.replace(/"/g, '')
      });
    }
    return next();
  }
  static async create(req, res, next) {
    const schema = _joi.default.object().keys({
      receiverPhoneNumber: _joi.default.string().required(),
      amount: _joi.default.number().required()
    });
    const {
      error
    } = schema.validate(req.body);
    if (error) {
      return res.status(400).json({
        message: error.details[0].message.replace(/"/g, '')
      });
    }
    return next();
  }
  static async decide(req, res, next) {
    const schema = _joi.default.object().keys({
      decision: _joi.default.string().allow('APPROVED', 'REJECTED').required()
    });
    const {
      error
    } = schema.validate(req.body);
    if (error) {
      return res.status(400).json({
        message: error.details[0].message.replace(/"/g, '')
      });
    }
    return next();
  }
}
exports.default = WithdrawrequestValidate;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJXaXRoZHJhd3JlcXVlc3RWYWxpZGF0ZSIsImZpbmRBbGwiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2NoZW1hIiwiam9pIiwib2JqZWN0Iiwia2V5cyIsInBhZ2UiLCJudW1iZXIiLCJsaW1pdCIsInN0YXR1cyIsInN0cmluZyIsInZhbGlkIiwidXNlcklkIiwiZXJyb3IiLCJ2YWxpZGF0ZSIsInF1ZXJ5IiwianNvbiIsIm1lc3NhZ2UiLCJkZXRhaWxzIiwicmVwbGFjZSIsImNyZWF0ZSIsInJlY2VpdmVyUGhvbmVOdW1iZXIiLCJyZXF1aXJlZCIsImFtb3VudCIsImJvZHkiLCJkZWNpZGUiLCJkZWNpc2lvbiIsImFsbG93Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FwcC92YWxpZGF0aW9ucy93aXRoZHJhd3JlcXVlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbiB9IGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgam9pIGZyb20gJ2pvaSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXaXRoZHJhd3JlcXVlc3RWYWxpZGF0ZSB7XHJcbiAgc3RhdGljIGFzeW5jIGZpbmRBbGwoXHJcbiAgICByZXE6IFJlcXVlc3QsXHJcbiAgICByZXM6IFJlc3BvbnNlLFxyXG4gICAgbmV4dDogTmV4dEZ1bmN0aW9uLFxyXG4gICkge1xyXG4gICAgY29uc3Qgc2NoZW1hID0gam9pLm9iamVjdCgpLmtleXMoe1xyXG4gICAgICBwYWdlOiBqb2kubnVtYmVyKCksXHJcbiAgICAgIGxpbWl0OiBqb2kubnVtYmVyKCksXHJcbiAgICAgIHN0YXR1czogam9pLnN0cmluZygpLnZhbGlkKCdBUFBST1ZFRCcsICdQRU5ESU5HJywgJ1JFSkVDVEVEJyksXHJcbiAgICAgIHVzZXJJZDogam9pLnN0cmluZygpLFxyXG4gICAgfSk7XHJcbiAgICBjb25zdCB7IGVycm9yIH0gPSBzY2hlbWEudmFsaWRhdGUocmVxLnF1ZXJ5KTtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xyXG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLmRldGFpbHNbMF0ubWVzc2FnZS5yZXBsYWNlKC9cIi9nLCAnJyksXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5leHQoKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBjcmVhdGUoXHJcbiAgICByZXE6IFJlcXVlc3QsXHJcbiAgICByZXM6IFJlc3BvbnNlLFxyXG4gICAgbmV4dDogTmV4dEZ1bmN0aW9uLFxyXG4gICkge1xyXG4gICAgY29uc3Qgc2NoZW1hID0gam9pLm9iamVjdCgpLmtleXMoe1xyXG4gICAgICByZWNlaXZlclBob25lTnVtYmVyOiBqb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcclxuICAgICAgYW1vdW50OiBqb2kubnVtYmVyKCkucmVxdWlyZWQoKSxcclxuICAgIH0pO1xyXG4gICAgY29uc3QgeyBlcnJvciB9ID0gc2NoZW1hLnZhbGlkYXRlKHJlcS5ib2R5KTtcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xyXG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLmRldGFpbHNbMF0ubWVzc2FnZS5yZXBsYWNlKC9cIi9nLCAnJyksXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5leHQoKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBkZWNpZGUoXHJcbiAgICByZXE6IFJlcXVlc3QsXHJcbiAgICByZXM6IFJlc3BvbnNlLFxyXG4gICAgbmV4dDogTmV4dEZ1bmN0aW9uLFxyXG4gICkge1xyXG4gICAgY29uc3Qgc2NoZW1hID0gam9pLm9iamVjdCgpLmtleXMoe1xyXG4gICAgICBkZWNpc2lvbjogam9pLnN0cmluZygpLmFsbG93KCdBUFBST1ZFRCcsICdSRUpFQ1RFRCcpLnJlcXVpcmVkKCksXHJcbiAgICB9KTtcclxuICAgIGNvbnN0IHsgZXJyb3IgfSA9IHNjaGVtYS52YWxpZGF0ZShyZXEuYm9keSk7XHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICBtZXNzYWdlOiBlcnJvci5kZXRhaWxzWzBdLm1lc3NhZ2UucmVwbGFjZSgvXCIvZywgJycpLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXh0KCk7XHJcbiAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0E7QUFBc0I7QUFFUCxNQUFNQSx1QkFBdUIsQ0FBQztFQUMzQyxhQUFhQyxPQUFPLENBQ2xCQyxHQUFZLEVBQ1pDLEdBQWEsRUFDYkMsSUFBa0IsRUFDbEI7SUFDQSxNQUFNQyxNQUFNLEdBQUdDLFlBQUcsQ0FBQ0MsTUFBTSxFQUFFLENBQUNDLElBQUksQ0FBQztNQUMvQkMsSUFBSSxFQUFFSCxZQUFHLENBQUNJLE1BQU0sRUFBRTtNQUNsQkMsS0FBSyxFQUFFTCxZQUFHLENBQUNJLE1BQU0sRUFBRTtNQUNuQkUsTUFBTSxFQUFFTixZQUFHLENBQUNPLE1BQU0sRUFBRSxDQUFDQyxLQUFLLENBQUMsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLENBQUM7TUFDN0RDLE1BQU0sRUFBRVQsWUFBRyxDQUFDTyxNQUFNO0lBQ3BCLENBQUMsQ0FBQztJQUNGLE1BQU07TUFBRUc7SUFBTSxDQUFDLEdBQUdYLE1BQU0sQ0FBQ1ksUUFBUSxDQUFDZixHQUFHLENBQUNnQixLQUFLLENBQUM7SUFDNUMsSUFBSUYsS0FBSyxFQUFFO01BQ1QsT0FBT2IsR0FBRyxDQUFDUyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNPLElBQUksQ0FBQztRQUMxQkMsT0FBTyxFQUFFSixLQUFLLENBQUNLLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsT0FBTyxDQUFDRSxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUU7TUFDcEQsQ0FBQyxDQUFDO0lBQ0o7SUFDQSxPQUFPbEIsSUFBSSxFQUFFO0VBQ2Y7RUFFQSxhQUFhbUIsTUFBTSxDQUNqQnJCLEdBQVksRUFDWkMsR0FBYSxFQUNiQyxJQUFrQixFQUNsQjtJQUNBLE1BQU1DLE1BQU0sR0FBR0MsWUFBRyxDQUFDQyxNQUFNLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDO01BQy9CZ0IsbUJBQW1CLEVBQUVsQixZQUFHLENBQUNPLE1BQU0sRUFBRSxDQUFDWSxRQUFRLEVBQUU7TUFDNUNDLE1BQU0sRUFBRXBCLFlBQUcsQ0FBQ0ksTUFBTSxFQUFFLENBQUNlLFFBQVE7SUFDL0IsQ0FBQyxDQUFDO0lBQ0YsTUFBTTtNQUFFVDtJQUFNLENBQUMsR0FBR1gsTUFBTSxDQUFDWSxRQUFRLENBQUNmLEdBQUcsQ0FBQ3lCLElBQUksQ0FBQztJQUMzQyxJQUFJWCxLQUFLLEVBQUU7TUFDVCxPQUFPYixHQUFHLENBQUNTLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ08sSUFBSSxDQUFDO1FBQzFCQyxPQUFPLEVBQUVKLEtBQUssQ0FBQ0ssT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDRCxPQUFPLENBQUNFLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRTtNQUNwRCxDQUFDLENBQUM7SUFDSjtJQUNBLE9BQU9sQixJQUFJLEVBQUU7RUFDZjtFQUVBLGFBQWF3QixNQUFNLENBQ2pCMUIsR0FBWSxFQUNaQyxHQUFhLEVBQ2JDLElBQWtCLEVBQ2xCO0lBQ0EsTUFBTUMsTUFBTSxHQUFHQyxZQUFHLENBQUNDLE1BQU0sRUFBRSxDQUFDQyxJQUFJLENBQUM7TUFDL0JxQixRQUFRLEVBQUV2QixZQUFHLENBQUNPLE1BQU0sRUFBRSxDQUFDaUIsS0FBSyxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQ0wsUUFBUTtJQUMvRCxDQUFDLENBQUM7SUFDRixNQUFNO01BQUVUO0lBQU0sQ0FBQyxHQUFHWCxNQUFNLENBQUNZLFFBQVEsQ0FBQ2YsR0FBRyxDQUFDeUIsSUFBSSxDQUFDO0lBQzNDLElBQUlYLEtBQUssRUFBRTtNQUNULE9BQU9iLEdBQUcsQ0FBQ1MsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDTyxJQUFJLENBQUM7UUFDMUJDLE9BQU8sRUFBRUosS0FBSyxDQUFDSyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNELE9BQU8sQ0FBQ0UsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFO01BQ3BELENBQUMsQ0FBQztJQUNKO0lBQ0EsT0FBT2xCLElBQUksRUFBRTtFQUNmO0FBQ0Y7QUFBQyJ9